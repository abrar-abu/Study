{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/empreview/employee.ts","webpack:///./src/app/empreview/empreview.component.css","webpack:///./src/app/empreview/empreview.component.html","webpack:///./src/app/empreview/empreview.component.ts","webpack:///./src/app/shared/shared.service.ts","webpack:///./src/app/show-data/show-data.component.css","webpack:///./src/app/show-data/show-data.component.html","webpack:///./src/app/show-data/show-data.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EMPReviewComponent } from './empreview/empreview.component';\nimport { ShowDataComponent } from './show-data/show-data.component';\n\nconst routes: Routes = [\n  {path : 'employee', component:EMPReviewComponent},\n  { path: 'show', component:ShowDataComponent},\n  //Add on default path\n  { path: '', component:EMPReviewComponent},\n  // It is our Widcard component\n  // {path : '**', component:ShowDataComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n</div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FirstDemo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AlertModule , ButtonsModule ,TimepickerModule} from 'ngx-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EMPReviewComponent } from './empreview/empreview.component';\nimport { SharedService } from './shared/shared.service';\nimport { FormsModule } from '@angular/forms';\nimport { ShowDataComponent } from './show-data/show-data.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EMPReviewComponent,\n    ShowDataComponent\n  ],\n  imports: [\n    AlertModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimepickerModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [SharedService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Employee {\n    firstName: string;\n    lastName: string;\n    DOB: any;\n    title: string;\n    department: string;\n    performance: string;\n    detail: string;\n    sFirstName: string;\n    sLastName: string;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcHJldmlldy9lbXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 style=\\\"text-align:center\\\"> 30 Day Employee Review</h1>\\n  {{employee|json}}\\n  <form>\\n    <label>Employee Name*</label>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.firstName\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.lastName\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label>Employee's Hire Date</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"input-group mb-3\\\">\\n        Employee's Title*\\n      </div>\\n      <div class=\\\"input-group mb-3\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Employee Title\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.title\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form group col-md-12\\\">\\n        <label>Employee's Department</label>\\n        <select class=\\\"form-control\\\" name=\\\"department\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.department\\\" >\\n          <option></option>\\n          <option>Marketing</option>\\n          <option>Sales</option>\\n          <option>HR</option>\\n          <option>Development</option>\\n        </select>\\n      </div>\\n    </div>\\n    <br>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form group col-md-12\\\">\\n        <label>Overall I would rank this employee performance as </label><br>\\n        <!-- Default inline 1-->\\n        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Very Good\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.performance\\\">\\n          <label class=\\\"custom-control-label\\\">Very Good</label>\\n        </div>\\n\\n        <!-- Default inline 2-->\\n        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Good\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.performance\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"defaultInline2\\\">Good</label>\\n        </div>\\n\\n        <!-- Default inline 3-->\\n        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Fair\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.performance\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"defaultInline3\\\">Fair</label>\\n        </div>\\n\\n        <!-- Default inline 4-->\\n        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Poor\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.performance\\\">\\n          <label class=\\\"custom-control-label\\\">Poor</label>\\n        </div>\\n\\n        <!-- Default inline 3-->\\n        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\"  name=\\\"performance\\\" value=\\\"Very Poor\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.performance\\\">\\n          <label class=\\\"custom-control-label\\\">Very Poor</label>\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label>Please go into more details why you choose this ranking </label>\\n        <textarea class=\\\"form-control\\\" rows=\\\"3\\\"  name=\\\"details\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.details\\\" ></textarea>\\n      </div>\\n    </div>\\n    <br>\\n    <label>Supervisor Name</label>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sFirstName\\\" placeholder=\\\"First Name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.sFirstName\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sLastName\\\" placeholder=\\\"Last Name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employee.sLastName\\\">\\n      </div>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"employeeSubmit()\\\">Submit</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from './employee';\nimport { SharedService } from '../shared/shared.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-empreview',\n  templateUrl: './empreview.component.html',\n  styleUrls: ['./empreview.component.css']\n})\nexport class EMPReviewComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  serviceData: Employee = new Employee();\n\n  constructor(private shared: SharedService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n  public employeeSubmit() {\n    this.shared.setdata(this.employee);\n    console.log(\"this is \" + this.employee.lastName);\n    this.displayEmployee();\n  }\n  public displayEmployee() {\n    this.serviceData = this.shared.getData();\n    this.router.navigate(['show']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Employee } from '../empreview/employee';\n\n@Injectable()\nexport class SharedService {\n    emp: Employee = new Employee();\n    public setdata(data: Employee) {\n        this.emp = data;\n    }\n    public getData() {\n        console.log(this.emp.lastName);\n        return this.emp;\n    }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3ctZGF0YS9zaG93LWRhdGEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <h1 style=\\\"text-align:center\\\"> Employee Review Detail</h1>\\n    {{getData|json}}\\n    <form>\\n        <label>Employee Name*</label>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" #name=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"getData.firstName\\\" disabled>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" #name=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"getData.lastName\\\" disabled>\\n            </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label>Employee's Hire Date</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" disabled>\\n            </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"input-group mb-3\\\">\\n                Employee's Title*\\n            </div>\\n            <div class=\\\"input-group mb-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Employee Title\\\" #name=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"getData.title\\\" disabled>\\n            </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form group col-md-12\\\">\\n                <label>Employee's Department</label>\\n                <select class=\\\"form-control\\\" name=\\\"department\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"getData.department\\\"\\n                    disabled>\\n                    <option></option>\\n                    <option>Marketing</option>\\n                    <option>Sales</option>\\n                    <option>HR</option>\\n                    <option>Development</option>\\n                </select>\\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form group col-md-12\\\">\\n                <label>Overall I would rank this employee performance as </label><br>\\n                <!-- Default inline 1-->\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Very Good\\\" #name=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"getData.performance\\\" disabled>\\n                    <label class=\\\"custom-control-label\\\">Very Good</label>\\n                </div>\\n\\n                <!-- Default inline 2-->\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Good\\\" #name=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"getData.performance\\\" disabled>\\n                    <label class=\\\"custom-control-label\\\" for=\\\"defaultInline2\\\">Good</label>\\n                </div>\\n\\n                <!-- Default inline 3-->\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Fair\\\" #name=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"getData.performance\\\" disabled>\\n                    <label class=\\\"custom-control-label\\\" for=\\\"defaultInline3\\\">Fair</label>\\n                </div>\\n\\n                <!-- Default inline 4-->\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Poor\\\" #name=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"getData.performance\\\" disabled>\\n                    <label class=\\\"custom-control-label\\\">Poor</label>\\n                </div>\\n\\n                <!-- Default inline 3-->\\n                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" name=\\\"performance\\\" value=\\\"Very Poor\\\" #name=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"getData.performance\\\" disabled>\\n                    <label class=\\\"custom-control-label\\\">Very Poor</label>\\n                </div>\\n            </div>\\n        </div>\\n        <br>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label>Please go into more details why you choose this ranking </label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"details\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"getData.details\\\"\\n                    disabled></textarea>\\n            </div>\\n        </div>\\n        <br>\\n        <label>Supervisor Name</label>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sFirstName\\\" placeholder=\\\"First Name\\\" #name=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"getData.sFirstName\\\" disabled>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sLastName\\\" placeholder=\\\"Last Name\\\" #name=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"getData.sLastName\\\" disabled>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '../shared/shared.service';\nimport { Employee } from '../empreview/employee';\n\n@Component({\n  selector: 'app-show-data',\n  templateUrl: './show-data.component.html',\n  styleUrls: ['./show-data.component.css']\n})\nexport class ShowDataComponent implements OnInit {\n\n  getData :Employee = new Employee();\n  constructor(private share:SharedService) {\n    this.getData = this.share.getData();\n\n  }\n  ngOnInit() {\n    this.getData = this.share.getData();\n    console.log(this.getData);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}